Documento,
top = 20,
at.least = 1,
stopwords("pt"))
print(DT::datatable(frequency))
}
# Função para normalizar texto
NormalizaParaTextMining <- function(texto){
# Normaliza texto
texto %>%
chartr(
old = "áéíóúÁÉÍÓÚýÝàèìòùÀÈÌÒÙâêîôûÂÊÎÔÛãõÃÕñÑäëïöüÄËÏÖÜÿçÇ´`^~¨:.!?&$@#0123456789",
new = "aeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC                       ",
x = .) %>% # Elimina acentos e caracteres desnecessarios
str_squish() %>% # Elimina espacos excedentes
tolower() %>% # Converte para minusculo
return() # Retorno da funcao
}
# Função para Palavras que podem se retiradas
# Lista de palavras para remover
palavrasRemover <- c(stopwords(kind = "pt"), letters) %>%
as.tibble() %>%
rename(Palavra = value) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra))
my_stopwords <- tibble(Palavra = c(as.character(1:3),
"www","http", ",", ".", "tq", "figura", "raiz","nº", "fatores", "causais", "fator", "afirma", "seguinte", "investigacao", "relatorio", "plataforma"))
.Analise_25Frases_texto <- function(texto) {
CleanW <- texto  %>%
unnest_tokens(Palavra, text) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra)) %>%
anti_join(palavrasRemover)  %>%
anti_join(my_stopwords)
ngrams=5
temp=ngram::ngram(ngram::concatenate(CleanW),ngrams)      # Objeto temporario recebe objeto que guarda sequencias
temp=get.phrasetable(temp)                                  # Obtendo tabela de sequencias do objeto acima
temp$ngrams=temp$ngrams%>%                                  # Limpeza das sequencias obtidas:
str_replace_all(pattern = "^([A-Za-z] [A-Za-z])+","")%>%  # Remover sequencias de apenas 1 letras
str_replace_all(pattern = "[:punct:]","")%>%              # Remover caracteres especiais
str_replace_all(pattern = "\n","")%>%                     # Remover o marcador de "nova linha"
str_trim()                                                # Remover espaços em branco sobrando
#Apos a limpeza..
temp=temp[temp$ngrams!="",]                                 # Selecionando apenas as linhas que contenham informacao
temp=temp%>%                                                # Novamente manipulando o objeto que contem a tabela de sequencias
group_by(ngrams) %>%                                      # Agrupando por "ngrams" (sequencias obtidas)
summarise(freq=sum(freq))%>%                              # Resumir as linhas repetidas pela soma das frequencias
arrange(desc(freq))%>%                                    # Organizando da maior para a menos frequencia
as.matrix()                                               # Alterando o tipo de objeto para matrix
rownames(temp)=str_c(temp[,1])                              # O nome das linhas passa a ser a sequencia correspondente
v=sort(temp[,2],decreasing = T)                               # Retorna um objeto com as frequencias em ordem decrescente e linhas nomeadas
data.frame(words = names(v),freq=v)%>%
head(n=25)%>%
ggplot(aes(words, freq)) +
geom_bar(stat = "identity", color = "black", fill = "#87CEFA") +
geom_text(aes(hjust = 1.3, label = freq)) +
coord_flip() +
labs(title = "25 frases mais mencionadas",  x = "Frases", y = "Número de usos")
}
# Função para normalizar texto
NormalizaParaTextMining <- function(texto){
# Normaliza texto
texto %>%
chartr(
old = "áéíóúÁÉÍÓÚýÝàèìòùÀÈÌÒÙâêîôûÂÊÎÔÛãõÃÕñÑäëïöüÄËÏÖÜÿçÇ´`^~¨:.!?&$@#0123456789",
new = "aeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC                       ",
x = .) %>% # Elimina acentos e caracteres desnecessarios
str_squish() %>% # Elimina espacos excedentes
tolower() %>% # Converte para minusculo
return() # Retorno da funcao
}
# Função para Palavras que podem se retiradas
# Lista de palavras para remover
palavrasRemover <- c(stopwords(kind = "pt"), letters) %>%
as.tibble() %>%
rename(Palavra = value) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra))
my_stopwords <- tibble(Palavra = c(as.character(1:3),
"www","http", ",", ".", "tq", "figura", "raiz","nº", "fatores", "causais", "fator", "afirma", "seguinte", "investigacao", "relatorio", "plataforma"))
# FUNCAO para analisar as 25 frases mais frequentes no texto dos fatores
.Analise_25Frases_texto <- function(texto) {
CleanW <- texto  %>%
unnest_tokens(Palavra, text) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra)) %>%
anti_join(palavrasRemover)  %>%
anti_join(my_stopwords)
ngrams=5
temp=ngram::ngram(ngram::concatenate(CleanW),ngrams)      # Objeto temporario recebe objeto que guarda sequencias
temp=get.phrasetable(temp)                                  # Obtendo tabela de sequencias do objeto acima
temp$ngrams=temp$ngrams%>%                                  # Limpeza das sequencias obtidas:
str_replace_all(pattern = "^([A-Za-z] [A-Za-z])+","")%>%  # Remover sequencias de apenas 1 letras
str_replace_all(pattern = "[:punct:]","")%>%              # Remover caracteres especiais
str_replace_all(pattern = "\n","")%>%                     # Remover o marcador de "nova linha"
str_trim()                                                # Remover espaços em branco sobrando
#Apos a limpeza..
temp=temp[temp$ngrams!="",]                                 # Selecionando apenas as linhas que contenham informacao
temp=temp%>%                                                # Novamente manipulando o objeto que contem a tabela de sequencias
group_by(ngrams) %>%                                      # Agrupando por "ngrams" (sequencias obtidas)
summarise(freq=sum(freq))%>%                              # Resumir as linhas repetidas pela soma das frequencias
arrange(desc(freq))%>%                                    # Organizando da maior para a menos frequencia
as.matrix()                                               # Alterando o tipo de objeto para matrix
rownames(temp)=str_c(temp[,1])                              # O nome das linhas passa a ser a sequencia correspondente
v=sort(temp[,2],decreasing = T)                               # Retorna um objeto com as frequencias em ordem decrescente e linhas nomeadas
data.frame(words = names(v),freq=v)%>%
head(n=25)%>%
ggplot(aes(words, freq)) +
geom_bar(stat = "identity", color = "black", fill = "#87CEFA") +
geom_text(aes(hjust = 1.3, label = freq)) +
coord_flip() +
labs(title = "25 frases mais mencionadas",  x = "Frases", y = "Número de usos")
}
tb_P20 <- .Analise_fatores_tb(P20)
# FUNÇÃO para fazer tabela dos fatores e frases correspondentes
.Analise_fatores_tb <- function(Texto) {
### Fator linha 51 "Regras e instruções de trabalho projetadas"
F51_Regras_projetadas <- .Frases(Texto$text,F51)
### Fator linha 22: Análise dos riscos na tomada de decisão
F22_Decisao <- .Frases(Texto$text, F22)
## Fator linha 87: Trabalho	Relações de Trabalho	Liderança de Equipe	Capacidade de coordenação
F87_coordena <- .Frases(Texto$text, F87)
## Fator linha 58 Trabalho	Condições de Trabalho	Design de interfaces	Inspeção / manutenção
F58_manutencao <- .Frases(Texto$text, F58)
## Fator linha 104 Organização	Gestão e organização do trabalho 	Gerenciamento de mudanças
F104Gerir_mudanca <- .Frases(Texto$text, F104)
## Fator linha 57 Design de interfaces,	Qualidade do equipamento
F57_QualiEquipamento <- .Frases(Texto$text, F57)
## Fator linha 118 Organização	Gestão e organização do trabalho 	Planejamento e Práticas de trabalho
F118_PraticaTrabalho <- .Frases(Texto$text, F118)
## Fator linha 28 Indivíduo	Competência / Repertório de Ações	Habilidades não técnicas	Consciência situacional	Consciência e respeito pelo risco
F28_ConscienciaRespeitoRisco <- .Frases(Texto$text, F28)
## Fator linha 29 Indivíduo	Competência / Repertório de Ações	Habilidades não técnicas	Consciência situacional	Atenção aos detalhes	Consciência situacional; atenção aos detalhes; falha no monitoramento do trabalho
F29_ConscienciaMonitora <- .Frases(Texto$text, F29)
## Fator linha 52 Trabalho	Condições de Trabalho	Design do trabalho	Carga de trabalho
F52_CargaTrabalho <-  .Frases(Texto$text, F52)
## Fator linha 56 Trabalho	Condições de Trabalho	Design de interfaces	Feedback do sistema técnico
F56_FeedbackSistema <-  .Frases(Texto$text, F56)
## Fator linha 61 Trabalho	Condições de Trabalho	Design de interfaces	Informação	Canais de comunicação
F61_Comunicacao <-  .Frases(Texto$text, F61)
## Fator linha 105 Organização	Gestão e organização do trabalho 	Cultura de segurança 	Prioridade à segurança
F105_PriorSeguranca <-  .Frases(Texto$text, F105)
Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-rbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-rbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
tb <- data.frame(Fatores, Frases, Dimensao, stringsAsFactors = FALSE)
return(tb)
}
tb_P20 <- .Analise_fatores_tb(P20)
.Analise_Fatores_grafico(tb_P20)
.Analise_Fatores_index(tb_P20)
.Analise_25Frases_texto(P20)
# Função para normalizar texto
NormalizaParaTextMining <- function(texto){
# Normaliza texto
texto %>%
chartr(
old = "áéíóúÁÉÍÓÚýÝàèìòùÀÈÌÒÙâêîôûÂÊÎÔÛãõÃÕñÑäëïöüÄËÏÖÜÿçÇ´`^~¨:.!?&$@#0123456789",
new = "aeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC                       ",
x = .) %>% # Elimina acentos e caracteres desnecessarios
str_squish() %>% # Elimina espacos excedentes
tolower() %>% # Converte para minusculo
return() # Retorno da funcao
}
# Função para Palavras que podem se retiradas
# Lista de palavras para remover
palavrasRemover <- c(stopwords(kind = "pt"), letters) %>%
as.tibble() %>%
rename(Palavra = value) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra))
my_stopwords <- tibble(Palavra = c(as.character(1:3),
"www","http", ",", ".", "tq", "figura", "raiz","nº", "fatores", "causais", "fator", "afirma", "seguinte", "investigacao", "relatorio", "plataforma", "f"))
# FUNCAO para analisar as 25 frases mais frequentes no texto dos fatores
.Analise_25Frases_texto <- function(texto) {
CleanW <- texto  %>%
unnest_tokens(Palavra, text) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra)) %>%
anti_join(palavrasRemover)  %>%
anti_join(my_stopwords)
ngrams=5
temp=ngram::ngram(ngram::concatenate(CleanW),ngrams)      # Objeto temporario recebe objeto que guarda sequencias
temp=get.phrasetable(temp)                                  # Obtendo tabela de sequencias do objeto acima
temp$ngrams=temp$ngrams%>%                                  # Limpeza das sequencias obtidas:
str_replace_all(pattern = "^([A-Za-z] [A-Za-z])+","")%>%  # Remover sequencias de apenas 1 letras
str_replace_all(pattern = "[:punct:]","")%>%              # Remover caracteres especiais
str_replace_all(pattern = "\n","")%>%                     # Remover o marcador de "nova linha"
str_trim()                                                # Remover espaços em branco sobrando
#Apos a limpeza..
temp=temp[temp$ngrams!="",]                                 # Selecionando apenas as linhas que contenham informacao
temp=temp%>%                                                # Novamente manipulando o objeto que contem a tabela de sequencias
group_by(ngrams) %>%                                      # Agrupando por "ngrams" (sequencias obtidas)
summarise(freq=sum(freq))%>%                              # Resumir as linhas repetidas pela soma das frequencias
arrange(desc(freq))%>%                                    # Organizando da maior para a menos frequencia
as.matrix()                                               # Alterando o tipo de objeto para matrix
rownames(temp)=str_c(temp[,1])                              # O nome das linhas passa a ser a sequencia correspondente
v=sort(temp[,2],decreasing = T)                               # Retorna um objeto com as frequencias em ordem decrescente e linhas nomeadas
data.frame(words = names(v),freq=v)%>%
head(n=25)%>%
ggplot(aes(words, freq)) +
geom_bar(stat = "identity", color = "black", fill = "#87CEFA") +
geom_text(aes(hjust = 1.3, label = freq)) +
coord_flip() +
labs(title = "25 frases mais mencionadas",  x = "Frases", y = "Número de usos")
}
tb_P36 <- .Analise_fatores_tb(P36)
.Analise_Fatores_grafico(tb_P36)
.Analise_Fatores_index(tb_P36)
.Analise_25Frases_texto(P36)
tb_P48 <- .Analise_fatores_tb(P48)
.Analise_Fatores_grafico(tb_P48)
.Analise_Fatores_index(tb_P48)
.Analise_25Frases_texto(P48)
tb_P36 <- mutate(tb_P36, Acidente = "P-36")
tb_P48 <- mutate(tb_P48, Acidente = "P-48")
tb_P20 <- mutate(tb_P20, Acidente = "P-20")
todos1 <- merge(tb_P36, tb_P48, all = TRUE)
data <- merge(todos1, tb_P20, all = TRUE)
names(data) <- c("individual","value","group")
# library
library(tidyverse)
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 4
to_add <- data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) <- colnames(data)
to_add$group <- rep(levels(data$group), each=empty_bar)
data <- rbind(data, to_add)
data <- data %>% arrange(group)
tb_P36 <- mutate(tb_P36, Acidente = "P-36")
tb_P48 <- mutate(tb_P48, Acidente = "P-48")
tb_P20 <- mutate(tb_P20, Acidente = "P-20")
todos1 <- merge(tb_P36, tb_P48, all = TRUE)
data <- merge(todos1, tb_P20, all = TRUE)
names(data) <- c("individual","value","group")
# library
library(tidyverse)
# Set a number of 'empty bar' to add at the end of each group
empty_bar <- 4
to_add <- data.frame( matrix(NA, empty_bar*nlevels(data$group), ncol(data)) )
colnames(to_add) <- colnames(data)
to_add$group <- rep(levels(data$group), each=empty_bar)
data <- rbind(data, to_add)
data <- data %>% arrange(group)
# FUNÇÃO Grafico do documento
.Analise_Fatores_grafico <- function(tb){
print(tb %>%
ggplot(aes(x= Frases , y=Fatores, size = Frases, color=Dimensao)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 20), name="Fatores Humanos"))
##  Núvem do documento
Documento <- tb %>%
paste(Frases)
frequency <- freq_terms(
Documento,
top = 20,
at.least = 1,
stopwords("pt"))
print(wordcloud(frequency$WORD,frequency$FREQ,
max.words = 60,
colors = c("grey80", "darkgoldenrod1","tomato")))
}
.Analise_Fatores_grafico(tb_P36)
# FUNÇÃO Grafico do documento
.Analise_Fatores_grafico <- function(tb){
print(tb %>%
ggplot(aes(x= Frases , y=Fatores, size = Frases, color=Dimensao)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 20), name="Fatores Humanos"))
##  Núvem do documento
Documento <- tb$Frases
frequency <- freq_terms(
Documento,
top = 20,
at.least = 1,
stopwords("pt"))
print(wordcloud(frequency$WORD,frequency$FREQ,
max.words = 60,
colors = c("grey80", "darkgoldenrod1","tomato")))
}
.Analise_Fatores_grafico(tb_P36)
# FUNÇÃO para fazer tabela dos fatores e frases correspondentes
.Analise_fatores_tb <- function(Texto) {
### Fator linha 51 "Regras e instruções de trabalho projetadas"
F51_Regras_projetadas <- .Frases(Texto$text,F51)
### Fator linha 22: Análise dos riscos na tomada de decisão
F22_Decisao <- .Frases(Texto$text, F22)
## Fator linha 87: Trabalho	Relações de Trabalho	Liderança de Equipe	Capacidade de coordenação
F87_coordena <- .Frases(Texto$text, F87)
## Fator linha 58 Trabalho	Condições de Trabalho	Design de interfaces	Inspeção / manutenção
F58_manutencao <- .Frases(Texto$text, F58)
## Fator linha 104 Organização	Gestão e organização do trabalho 	Gerenciamento de mudanças
F104Gerir_mudanca <- .Frases(Texto$text, F104)
## Fator linha 57 Design de interfaces,	Qualidade do equipamento
F57_QualiEquipamento <- .Frases(Texto$text, F57)
## Fator linha 118 Organização	Gestão e organização do trabalho 	Planejamento e Práticas de trabalho
F118_PraticaTrabalho <- .Frases(Texto$text, F118)
## Fator linha 28 Indivíduo	Competência / Repertório de Ações	Habilidades não técnicas	Consciência situacional	Consciência e respeito pelo risco
F28_ConscienciaRespeitoRisco <- .Frases(Texto$text, F28)
## Fator linha 29 Indivíduo	Competência / Repertório de Ações	Habilidades não técnicas	Consciência situacional	Atenção aos detalhes	Consciência situacional; atenção aos detalhes; falha no monitoramento do trabalho
F29_ConscienciaMonitora <- .Frases(Texto$text, F29)
## Fator linha 52 Trabalho	Condições de Trabalho	Design do trabalho	Carga de trabalho
F52_CargaTrabalho <-  .Frases(Texto$text, F52)
## Fator linha 56 Trabalho	Condições de Trabalho	Design de interfaces	Feedback do sistema técnico
F56_FeedbackSistema <-  .Frases(Texto$text, F56)
## Fator linha 61 Trabalho	Condições de Trabalho	Design de interfaces	Informação	Canais de comunicação
F61_Comunicacao <-  .Frases(Texto$text, F61)
## Fator linha 105 Organização	Gestão e organização do trabalho 	Cultura de segurança 	Prioridade à segurança
F105_PriorSeguranca <-  .Frases(Texto$text, F105)
Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-rbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-rbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
tb <- data.frame(Fatores, Frases, Dimensao, stringsAsFactors = FALSE)
Documento <- paste(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
return(tb)
}
# FUNÇÃO Grafico do documento
.Analise_Fatores_grafico <- function(tb){
print(tb %>%
ggplot(aes(x= Frases , y=Fatores, size = Frases, color=Dimensao)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 20), name="Fatores Humanos"))
}
##  FUNCAO Núvem do documento
.Nuvem_Fatores <- function(Documento){
frequency <- freq_terms(
Documento,
top = 20,
at.least = 1,
stopwords("pt"))
print(wordcloud(frequency$WORD,frequency$FREQ,
max.words = 60,
colors = c("grey80", "darkgoldenrod1","tomato")))
}
## FUNÇÃO Índice do documento extraído das frases dos fatores
.Analise_Fatores_index <- function(Documento){
frequency <- freq_terms(
Documento,
top = 20,
at.least = 1,
stopwords("pt"))
print(DT::datatable(frequency))
}
dim(tb_P20)
names(tb_P20)
view(tb_P20)
# FUNÇÃO para fazer tabela dos fatores e frases correspondentes
.Analise_fatores_tb <- function(Texto) {
### Fator linha 51 "Regras e instruções de trabalho projetadas"
F51_Regras_projetadas <- .Frases(Texto$text,F51)
### Fator linha 22: Análise dos riscos na tomada de decisão
F22_Decisao <- .Frases(Texto$text, F22)
## Fator linha 87: Trabalho	Relações de Trabalho	Liderança de Equipe	Capacidade de coordenação
F87_coordena <- .Frases(Texto$text, F87)
## Fator linha 58 Trabalho	Condições de Trabalho	Design de interfaces	Inspeção / manutenção
F58_manutencao <- .Frases(Texto$text, F58)
## Fator linha 104 Organização	Gestão e organização do trabalho 	Gerenciamento de mudanças
F104Gerir_mudanca <- .Frases(Texto$text, F104)
## Fator linha 57 Design de interfaces,	Qualidade do equipamento
F57_QualiEquipamento <- .Frases(Texto$text, F57)
## Fator linha 118 Organização	Gestão e organização do trabalho 	Planejamento e Práticas de trabalho
F118_PraticaTrabalho <- .Frases(Texto$text, F118)
## Fator linha 28 Indivíduo	Competência / Repertório de Ações	Habilidades não técnicas	Consciência situacional	Consciência e respeito pelo risco
F28_ConscienciaRespeitoRisco <- .Frases(Texto$text, F28)
## Fator linha 29 Indivíduo	Competência / Repertório de Ações	Habilidades não técnicas	Consciência situacional	Atenção aos detalhes	Consciência situacional; atenção aos detalhes; falha no monitoramento do trabalho
F29_ConscienciaMonitora <- .Frases(Texto$text, F29)
## Fator linha 52 Trabalho	Condições de Trabalho	Design do trabalho	Carga de trabalho
F52_CargaTrabalho <-  .Frases(Texto$text, F52)
## Fator linha 56 Trabalho	Condições de Trabalho	Design de interfaces	Feedback do sistema técnico
F56_FeedbackSistema <-  .Frases(Texto$text, F56)
## Fator linha 61 Trabalho	Condições de Trabalho	Design de interfaces	Informação	Canais de comunicação
F61_Comunicacao <-  .Frases(Texto$text, F61)
## Fator linha 105 Organização	Gestão e organização do trabalho 	Cultura de segurança 	Prioridade à segurança
F105_PriorSeguranca <-  .Frases(Texto$text, F105)
Qnt_Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-rbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-rbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
Frases <- rbind(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, stringsAsFactors = FALSE)
return(tb)
}
# FUNÇÃO Grafico do documento
.Analise_Fatores_grafico <- function(tb){
print(tb %>%
ggplot(aes(x= Qnt_Frases , y=Fatores, size = Qnt_Frases, color=Dimensao)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 20), name="Fatores Humanos"))
}
##  FUNCAO Núvem do documento
.Nuvem_Fatores <- function(tb){
frases <- paste(tb$Frases)
frequency <- freq_terms(
frases,
top = 20,
at.least = 1,
stopwords("pt"))
print(wordcloud(frequency$WORD,frequency$FREQ,
max.words = 60,
colors = c("grey80", "darkgoldenrod1","tomato")))
}
## FUNÇÃO Índice do documento extraído das frases dos fatores
.Analise_Fatores_index <- function(tb){
frases <- paste(tb$Frases)
frequency <- freq_terms(
frases,
top = 20,
at.least = 1,
stopwords("pt"))
print(DT::datatable(frequency))
}
# Função para normalizar texto
NormalizaParaTextMining <- function(texto){
# Normaliza texto
texto %>%
chartr(
old = "áéíóúÁÉÍÓÚýÝàèìòùÀÈÌÒÙâêîôûÂÊÎÔÛãõÃÕñÑäëïöüÄËÏÖÜÿçÇ´`^~¨:.!?&$@#0123456789",
new = "aeiouAEIOUyYaeiouAEIOUaeiouAEIOUaoAOnNaeiouAEIOUycC                       ",
x = .) %>% # Elimina acentos e caracteres desnecessarios
str_squish() %>% # Elimina espacos excedentes
tolower() %>% # Converte para minusculo
return() # Retorno da funcao
}
# Função para Palavras que podem se retiradas
# Lista de palavras para remover
palavrasRemover <- c(stopwords(kind = "pt"), letters) %>%
as.tibble() %>%
rename(Palavra = value) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra))
my_stopwords <- tibble(Palavra = c(as.character(1:3),
"www","http", ",", ".", "tq", "figura", "raiz","nº", "fatores", "causais", "fator", "afirma", "seguinte", "investigacao", "relatorio", "plataforma", "f"))
# FUNCAO para analisar as 25 frases mais frequentes no texto dos fatores
.Analise_25Frases_texto <- function(texto) {
CleanW <- texto  %>%
unnest_tokens(Palavra, text) %>%
mutate(Palavra = NormalizaParaTextMining(Palavra)) %>%
anti_join(palavrasRemover)  %>%
anti_join(my_stopwords)
ngrams=5
temp=ngram::ngram(ngram::concatenate(CleanW),ngrams)      # Objeto temporario recebe objeto que guarda sequencias
temp=get.phrasetable(temp)                                  # Obtendo tabela de sequencias do objeto acima
temp$ngrams=temp$ngrams%>%                                  # Limpeza das sequencias obtidas:
str_replace_all(pattern = "^([A-Za-z] [A-Za-z])+","")%>%  # Remover sequencias de apenas 1 letras
str_replace_all(pattern = "[:punct:]","")%>%              # Remover caracteres especiais
str_replace_all(pattern = "\n","")%>%                     # Remover o marcador de "nova linha"
str_trim()                                                # Remover espaços em branco sobrando
#Apos a limpeza..
temp=temp[temp$ngrams!="",]                                 # Selecionando apenas as linhas que contenham informacao
temp=temp%>%                                                # Novamente manipulando o objeto que contem a tabela de sequencias
group_by(ngrams) %>%                                      # Agrupando por "ngrams" (sequencias obtidas)
summarise(freq=sum(freq))%>%                              # Resumir as linhas repetidas pela soma das frequencias
arrange(desc(freq))%>%                                    # Organizando da maior para a menos frequencia
as.matrix()                                               # Alterando o tipo de objeto para matrix
rownames(temp)=str_c(temp[,1])                              # O nome das linhas passa a ser a sequencia correspondente
v=sort(temp[,2],decreasing = T)                               # Retorna um objeto com as frequencias em ordem decrescente e linhas nomeadas
data.frame(words = names(v),freq=v)%>%
head(n=25)%>%
ggplot(aes(words, freq)) +
geom_bar(stat = "identity", color = "black", fill = "#87CEFA") +
geom_text(aes(hjust = 1.3, label = freq)) +
coord_flip() +
labs(title = "25 frases mais mencionadas",  x = "Frases", y = "Número de usos")
}
tb_P20 <- .Analise_fatores_tb(P20)
.Analise_Fatores_grafico(tb_P20)
.Nuvem_Fatores(tb_P20)
view(tb_P20)
Qnt_Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-cbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-cbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
Frases <- cbind(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, stringsAsFactors = FALSE)
Qnt_Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-cbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-cbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
Frases <- list(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, stringsAsFactors = FALSE)
Qnt_Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-cbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-cbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
tb <- data.frame(Fatores, Qnt_Frases, Dimensao, stringsAsFactors = FALSE)
tb
Qnt_Frases <- c(length(F22_Decisao),length(F51_Regras_projetadas), length(F58_manutencao),length(F57_QualiEquipamento),length(F87_coordena),length(F104Gerir_mudanca), length(F118_PraticaTrabalho), length(F28_ConscienciaRespeitoRisco), length(F29_ConscienciaMonitora), length(F52_CargaTrabalho), length(F56_FeedbackSistema), length(F61_Comunicacao), length(F105_PriorSeguranca))
Fatores<-rbind("F22_Decisao","F51_Regras_projetadas", "F58_manutencao","F57_QualiEquipamento","F87_coordena","F104Gerir_mudanca", "F118_PraticaTrabalho","F28_ConscienciaRespeitoRisco","F29_ConscienciaMonitora", "F52_CargaTrabalho","F56_FeedbackSistema", "F61_Comunicacao","F105_PriorSeguranca")
Dimensao <-rbind("Individuo","Trabalho", "Trabalho","Trabalho","Organizacao","Organizacao", "Trabalho","Individuo","Individuo", "Trabalho","Trabalho", "Organizacao","Organizacao")
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, stringsAsFactors = FALSE)
tb <- data.frame(Fatores, Qnt_Frases, Dimensao, stringsAsFactors = FALSE)
View(tb)
Frases <- data.frame(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
Frases <- data.frame(list(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca))
Frases <- list(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
View(Frases)
Frases <- list(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, Frases, stringsAsFactors = FALSE)
Frases <- Vectorize(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
Frases <- as_vector(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
Frases <- list.cbind(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
Frases <- list(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
Frases <- list.cbind(Frases)
Frases
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, Frases, stringsAsFactors = FALSE)
Frases <- list.cbind(Frases)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, Frases, stringsAsFactors = FALSE)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, , stringsAsFactors = FALSE)
tb <- data.frame(Fatores, Qnt_Frases, Frases, Dimensao, stringsAsFactors = FALSE)
tb
dim(tb)
Frases <- list.cbind(Frases)
Frases
Frases <- cbind.data.frame(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
Frases <- rbind.data.frame(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
View(Frases)
Frases <- VCorpus(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca, language)
Frases <- list.append(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca, language)
Frases <- list.append(F22_Decisao,F51_Regras_projetadas,F58_manutencao,F57_QualiEquipamento,F87_coordena,F104Gerir_mudanca,F118_PraticaTrabalho, F28_ConscienciaRespeitoRisco, F29_ConscienciaMonitora, F52_CargaTrabalho, F56_FeedbackSistema, F61_Comunicacao, F105_PriorSeguranca)
View(Frases)
write_file(F22_Decisao,F51_Regras_projetadas, path = "~/Text Mining/", append = TRUE)
write_file(F22_Decisao, path = "~/Text Mining/", append = TRUE)
write_file(F22_Decisao, path = "~/Text Mining/F22_Decisao", append = TRUE)
